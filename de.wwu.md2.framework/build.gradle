dependencies {
	// To run MD2 creation workflow
	compile 'org.eclipse.equinox:org.eclipse.equinox.common:3.6.200.v20130402-1505'
	compile 'org.ow2.asm:asm:5.2'
	compile 'org.eclipse.emf:org.eclipse.emf.mwe2.launch:2.8.3'
	compile 'org.eclipse.xtext:org.eclipse.xtext:2.10.0'
	compile 'org.eclipse.xtext:org.eclipse.xtext.common.types:2.10.0'
	compile 'org.eclipse.emf:org.eclipse.emf.mwe.utils:1.3.20.201605261059'
	compile 'org.eclipse.xtext:org.eclipse.xtext.generator:2.10.0'
	compile 'org.eclipse.xpand:org.eclipse.xpand:2.0.0'
	compile 'org.eclipse.xpand:org.eclipse.xtend:2.0.0'
	compile 'org.eclipse.xpand:org.eclipse.xtend.typesystem.emf:2.0.0'
	
	// Dependencies in Eclipse project
	compile 'com.google.inject.extensions:guice-multibindings:3.0'
	compile 'commons-codec:commons-codec:1.10'
}

configurations {
	mwe2 {
		extendsFrom compile
	}
}

eclipse {
	classpath {	
		file {
			whenMerged { classpath ->
				if(classpath.entries.findAll({entry -> entry instanceof org.gradle.plugins.ide.eclipse.model.Container && entry.path == 'org.eclipse.pde.core.requiredPlugins'
				}).size == 0) {
					
					withXml {
						def node = it.asNode()
						
						logger.info 'Add classpath entry for org.eclipse.pde.core.requiredPlugins'
						
						node.appendNode('classpathentry', [kind: 'con', path: 'org.eclipse.pde.core.requiredPlugins'])
					}
				}
				
				// Add source path
				if(classpath.entries.findAll({entry -> entry instanceof org.gradle.plugins.ide.eclipse.model.SourceFolder }).size == 0) {
					classpath.entries.add( new org.gradle.plugins.ide.eclipse.model.SourceFolder('src', null))
					classpath.entries.add( new org.gradle.plugins.ide.eclipse.model.SourceFolder('src-gen', null))
					classpath.entries.add( new org.gradle.plugins.ide.eclipse.model.SourceFolder('xtend-gen', null))
				}
				
				// Add Xtend_container (unknown if really necessary)
				// node.appendNode('classpathentry', [kind: 'con', path: 'org.eclipse.xtend.XTEND_CONTAINER'])
			}
		}
	}
}

task generateMD2LanguageArtifacts(type: JavaExec, dependsOn: 'eclipse') {
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.compile + files('./src/') // Cannot be set via sourceset as it throws errors before having generated the language files
	
	outputs.dir 'src-gen'
	args += 'src/de/wwu/md2/framework/GenerateMD2.mwe2'
}